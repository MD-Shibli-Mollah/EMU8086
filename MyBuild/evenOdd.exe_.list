EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
evenOdd.exe_ -- emu8086 assembler version: 4.11 R439  
 
[ 20-Apr-18  --  9:36:26 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .STACK 100h
[   3]        :                                       .data
[   4]    0100: 45 76 65 6E 24                        msg DB 'Even$'
[   5]    0105: 6F 64 64 24                           msg1 DB 'odd$'
[   6]        :                                       
[   7]    0109:                                       main PROC
[   8]    0109: B8 10 00                              MOV AX,@data
[   9]    010C: 8E D8                                 MOV DS,AX
[  10]        :                                       
[  11]    010E: B4 01                                 MOV AH,1     ;input
[  12]    0110: CD 21                                 INT 21h
[  13]        :                                       
[  14]    0112: B3 02                                 MOV BL,2
[  15]    0114: F6 F3                                 DIV BL
[  16]        :                                       
[  17]    0116: 80 FC 00                              CMP AH,0     ;comparison
[  18]    0119: 75 0F                                 JNE odd
[  19]        :                                       
[  20]    011B: B4 02                                 MOV AH,2
[  21]    011D: B2 0A                                 MOV DL,0ah   ;new line
[  22]    011F: CD 21                                 INT 21h
[  23]        :                                       
[  24]    0121: B4 09                                 MOV AH,9h
[  25]    0123: BA 00 00                              LEA DX,msg   ;output EVEN
[  26]    0126: CD 21                                 INT 21h
[  27]    0128: EB 0D                                 JMP exit
[  28]        :                                       
[  29]    012A:                                       odd:
[  30]    012A: B4 02                                 MOV AH,2
[  31]    012C: B2 0A                                 MOV DL,0ah   ;new line
[  32]    012E: CD 21                                 INT 21h
[  33]        :                                       
[  34]    0130: B4 09                                 MOV AH,9h
[  35]    0132: BA 05 00                              LEA DX,msg1  ;output ODD
[  36]    0135: CD 21                                 INT 21h
[  37]        :                                       
[  38]    0137:                                       exit:
[  39]    0137: B4 4C                                 MOV AH,4ch
[  40]    0139: CD 21                                 INT 21h
[  41]        :                                       main ENDP
[  42]        :                                       END main
[  43]        :                                       
[  44]        :                                       
[  45]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 3B      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 39      -   check sum (l.byte)
0013: 46      -   check sum (h.byte)
0014: 09      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 0A      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
